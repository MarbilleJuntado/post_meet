<div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
  <div class="mb-8">
    <div class="flex items-center justify-between">
      <div>
        <h1 class="text-3xl font-bold text-gray-900">Generated Content</h1>
        <p class="mt-2 text-gray-600">AI-generated content from "<%= @meeting.title %>"</p>
      </div>
      <a href={~p"/meetings/#{@meeting.id}"} class="text-blue-600 hover:text-blue-500 text-sm font-medium">
        ← Back to Meeting
      </a>
    </div>
  </div>

  <!-- Content Generation Stats -->
  <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-6 w-6 text-blue-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
            </svg>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Total Content</dt>
              <dd class="text-lg font-medium text-gray-900"><%= length(@content) %></dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-6 w-6 text-green-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Posted</dt>
              <dd class="text-lg font-medium text-gray-900">
                <%= Enum.count(@content, &(&1.status == "posted")) %>
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>

    <div class="bg-white overflow-hidden shadow rounded-lg">
      <div class="p-5">
        <div class="flex items-center">
          <div class="flex-shrink-0">
            <svg class="h-6 w-6 text-yellow-600" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
          </div>
          <div class="ml-5 w-0 flex-1">
            <dl>
              <dt class="text-sm font-medium text-gray-500 truncate">Draft</dt>
              <dd class="text-lg font-medium text-gray-900">
                <%= Enum.count(@content, &(&1.status == "draft")) %>
              </dd>
            </dl>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Content List -->
  <div class="bg-white shadow overflow-hidden sm:rounded-md">
    <ul class="divide-y divide-gray-200">
      <%= for content <- @content do %>
        <li class="px-6 py-4 hover:bg-gray-50 cursor-pointer content-item" 
            data-content-id={content.id}
            data-content-text={content.content}>
          <div class="flex items-center justify-between">
            <div class="flex items-center space-x-3">
              <div class="flex-shrink-0">
                <div class="w-8 h-8 flex items-center justify-center rounded-lg bg-gray-100">
                  <%= if content.platform == "linkedin" do %>
                    <svg class="w-5 h-5 text-blue-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
                    </svg>
                  <% else %>
                    <svg class="w-5 h-5 text-gray-600" fill="currentColor" viewBox="0 0 24 24">
                      <path d="M24 4.557c-.883.392-1.832.656-2.828.775 1.017-.609 1.798-1.574 2.165-2.724-.951.564-2.005.974-3.127 1.195-.897-.957-2.178-1.555-3.594-1.555-3.179 0-5.515 2.966-4.797 6.045-4.091-.205-7.719-2.165-10.148-5.144-1.29 2.213-.669 5.108 1.523 6.574-.806-.026-1.566-.247-2.229-.616-.054 2.281 1.581 4.415 3.949 4.89-.693.188-1.452.232-2.224.084.626 1.956 2.444 3.379 4.6 3.419-2.07 1.623-4.678 2.348-7.29 2.04 2.179 1.397 4.768 2.212 7.548 2.212 9.142 0 14.307-7.721 13.995-14.646.962-.695 1.797-1.562 2.457-2.549z"/>
                    </svg>
                  <% end %>
                </div>
              </div>
              <div class="flex-1 min-w-0">
                <div class="flex items-center space-x-2">
                  <h3 class="text-sm font-medium text-gray-900 truncate">
                    Meeting Content
                  </h3>
                  <span class={"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium #{case content.status do
                    "posted" -> "bg-green-100 text-green-800"
                    "draft" -> "bg-yellow-100 text-yellow-800"
                    "failed" -> "bg-red-100 text-red-800"
                  end}"}>
                    <%= String.capitalize(content.status) %>
                  </span>
                </div>
                <p class="text-sm text-gray-500">
                  <%= String.capitalize(content.platform) %> • 
                  <%= String.capitalize(content.content_type) %>
                </p>
                <p class="text-xs text-gray-400 mt-1">
                  <%= Calendar.strftime(content.inserted_at, "%B %d, %Y at %I:%M %p") %>
                </p>
              </div>
            </div>
            <div class="flex items-center space-x-2">
              <svg class="w-5 h-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7" />
              </svg>
            </div>
          </div>
        </li>
      <% end %>
    </ul>
  </div>

  <%= if @content == [] do %>
    <div class="text-center py-12">
      <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
      </svg>
      <h3 class="mt-2 text-sm font-medium text-gray-900">No content generated yet</h3>
      <p class="mt-1 text-sm text-gray-500">Content will appear here after your meetings are processed.</p>
    </div>
  <% end %>
</div>

<!-- Content Modal -->
<div id="content-modal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden z-50">
  <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-1/2 shadow-lg rounded-md bg-white">
    <div class="mt-3">
      <!-- Modal Header -->
      <div class="flex items-center justify-between mb-4">
        <div>
          <h3 class="text-lg font-bold text-gray-900">Draft post</h3>
          <p class="text-sm text-gray-600">Generate a post based on insights from this meeting.</p>
        </div>
        <button id="close-modal" class="text-gray-400 hover:text-gray-600">
          <svg class="w-6 h-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
          </svg>
        </button>
      </div>

      <!-- Modal Content -->
      <div class="mb-6">
        <div class="bg-gray-50 rounded-lg p-4 border">
          <div id="modal-content-text" class="text-gray-900 whitespace-pre-wrap"></div>
        </div>
      </div>

      <!-- Modal Footer -->
      <div class="flex items-center justify-between">
        <button id="copy-content" class="flex items-center px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
          <svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z" />
          </svg>
          Copy
        </button>
        
        <div class="flex space-x-3">
          <button id="cancel-modal" class="px-4 py-2 border border-gray-300 rounded-md text-sm font-medium text-gray-700 bg-white hover:bg-gray-50">
            Cancel
          </button>
          <button id="save-content" class="px-4 py-2 bg-green-600 text-white rounded-md text-sm font-medium hover:bg-green-700">
            Save
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const modal = document.getElementById('content-modal');
  const closeModal = document.getElementById('close-modal');
  const cancelModal = document.getElementById('cancel-modal');
  const copyContent = document.getElementById('copy-content');
  const saveContent = document.getElementById('save-content');
  const modalContentText = document.getElementById('modal-content-text');

  // Open modal when content item is clicked
  document.addEventListener('click', function(e) {
    if (e.target.closest('.content-item')) {
      const contentItem = e.target.closest('.content-item');
      const contentText = contentItem.getAttribute('data-content-text');
      modalContentText.textContent = contentText;
      modal.classList.remove('hidden');
    }
  });

  // Close modal functions
  function closeModalFunc() {
    modal.classList.add('hidden');
  }

  closeModal.addEventListener('click', closeModalFunc);
  cancelModal.addEventListener('click', closeModalFunc);

  // Copy content to clipboard
  copyContent.addEventListener('click', function() {
    navigator.clipboard.writeText(modalContentText.textContent).then(function() {
      // Show success feedback
      const originalText = copyContent.innerHTML;
      copyContent.innerHTML = '<svg class="w-4 h-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" /></svg>Copied!';
      setTimeout(() => {
        copyContent.innerHTML = originalText;
      }, 2000);
    });
  });

  // Save content (placeholder)
  saveContent.addEventListener('click', function() {
    // In a real implementation, this would save the content
    alert('Content saved!');
    closeModalFunc();
  });

  // Close modal when clicking outside
  modal.addEventListener('click', function(e) {
    if (e.target === modal) {
      closeModalFunc();
    }
  });
});
</script>